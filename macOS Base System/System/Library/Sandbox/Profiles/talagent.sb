;;; Copyright (c) 2023 Apple Inc.  All Rights reserved.
;;;
;;; WARNING: The sandbox rules in this file currently constitute
;;; Apple System Private Interface and are subject to change at any time and
;;; without notice.
;;;
(version 1)

(deny default)
(deny file-map-executable process-info* nvram*)
(deny dynamic-code-generation)

(deny mach-priv-host-port)

(import "system.sb")
(import "com.apple.corefoundation.sb")
(corefoundation)

;;; Homedir-relative path filters
(define (home-regex home-relative-regex)
    (regex (string-append "^" (regex-quote (param "HOME")) home-relative-regex)))

(define (home-subpath home-relative-subpath)
    (subpath (string-append (param "HOME") home-relative-subpath)))

(define (home-prefix home-relative-prefix)
    (prefix (string-append (param "HOME") home-relative-prefix)))

(define (home-literal home-relative-literal)
    (literal (string-append (param "HOME") home-relative-literal)))


(allow process-info* (target self))

;; For resolving symlinks, realpath(3), and equivalents.
(allow file-read-metadata)

;; For validating the entitlements of clients.
(allow process-info-codesignature)

;; Your preference domain
(allow user-preference-read user-preference-write
       (preference-domain "com.apple.talagent"))

;; Read/write access to a temporary directory.
(allow file-read* file-write*
       (subpath (param "TMPDIR"))
       (subpath (param "DARWIN_CACHE_DIR")))

;; Read/write cache access
(let ((cache-path-filter (home-subpath "/Library/Caches/com.apple.talagent")))
  (allow file-read* file-write* cache-path-filter)
  (allow file-issue-extension
    (require-all
      (extension-class "com.apple.app-sandbox.read" "com.apple.app-sandbox.read-write")
      cache-path-filter)))

;; Saved Application State
(allow file-read* file-write*
    (home-subpath "/Library/Saved Application State")
    (home-regex "/Library/Containers/[^/]+/Data/Library/Saved Application State/"))

;; Login Keychain
(allow file-read* file-write*
    (home-regex #"/Library/Keychains/\.[\w]*")
    (home-subpath "/Library/Keychains/login.keychain-db")
    (home-regex "/Library/Keychains/login\.keychain-db\.sb-[-\w]*"))

;; App info
(allow file-read*
    (regex #"\.app$")
    (regex #"\.app/Contents$")
    (regex #"\.app/Contents/Info.plist$"))

(allow file-read*
    (home-subpath "/Library/Keyboard Layouts")
    (home-subpath "/Library/Input Methods")
    (literal "/private/var/db/mds/messages/501/se_SecurityMessages")
    (literal "/private/var/db/mds/system/mdsObject.db")
    (literal "/private/var/db/mds/system/mdsDirectory.db"))

(allow mach-lookup
    (global-name "com.apple.CARenderServer")
    (global-name "com.apple.SecurityServer")
    (global-name "com.apple.coreservices.appleevents")
    (global-name "com.apple.coreservices.launchservicesd")
    (global-name "com.apple.dock.fullscreen")
    (global-name "com.apple.dock.server")
    (global-name "com.apple.fonts")
    (global-name "com.apple.lsd.modifydb")
    (global-name "com.apple.inputmethodkit.getxpcendpoint")
    (global-name "com.apple.inputmethodkit.launchagent")
    (global-name "com.apple.inputmethodkit.launcher")
    (global-name "com.apple.lsd.mapdb")
    (global-name "com.apple.metadata.mds")
    (global-name "com.apple.pasteboard.1")
    (global-name "com.apple.securityd.xpc")
    (global-name "com.apple.tccd.system")
    (global-name "com.apple.touchbarserver.mig")
    (global-name "com.apple.tsm.uiserver")
    (global-name "com.apple.window_proxies")
    (global-name "com.apple.windowmanager.server")
    (global-name "com.apple.windowserver.active"))

(allow ipc-posix-shm-read*
    (ipc-posix-name-regex #"^/tmp/com.apple.csseed.[0-9]+$"))

(allow ipc-posix-shm-read* ipc-posix-shm-write*
    (ipc-posix-name "com.apple.AppleDatabaseChanged"))

(allow user-preference-read
    (preference-domain "kCFPreferencesAnyApplication")
    (preference-domain "com.apple.security")
    (preference-domain "com.apple.universalaccess")
    (preference-domain "com.apple.HIToolbox"))

; So we can relaunch auto-terminated apps ourselves (110095884)
(allow mach-lookup
    (global-name "com.apple.coreservices.quarantine-resolver"))
(allow lsopen)
